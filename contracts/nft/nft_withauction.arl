archetype nft(admin : address)

asset ledger {
  id         : nat;
  owner      : address;
  /* auction data */
  forsale    : bool = false;
  bestbid    : tez = 0tz;
  bestbidder : option<address> = none;
  endofbid   : date = now;
}

entry %transfer (%from : address, %to : address, tid : nat) {
  called by ledger[tid].owner
  effect {
    ledger[tid].owner := %to;
  }
}

entry mint(o : address, p : tez) {
  called by admin
  effect {
    ledger.add({ id = ledger.count(); owner = o })
  }
}

entry upforsale (tid : nat, initprice : tez) {
  called by ledger[tid].owner
  effect {
    ledger.update(tid, {
      forsale  = true;
      bestbid  = initprice;
      endofbid = (now + 5m)
    });
  }
}

entry bid(tid : nat) {
  require {
    r1 otherwise "Asset Not For Sale": ledger[tid].forsale = true;
    r2: now < ledger[tid].endofbid;
    r3: transferred > ledger[tid].bestbid;
  }
  effect {
    match ledger[tid].bestbidder with
    | some b ->
      transfer ledger[tid].bestbid to b
    | none -> ()
    end;
    ledger.update(tid, {
      bestbidder = some(caller);
      bestbid = transferred;
      endofbid += (if ledger[tid].endofbid - now < 2m then 2m else 0)
    })
  }
}

entry claim (tid : nat) {
  require {
    r4 otherwise "Bid Period Is Still On": now > ledger[tid].endofbid;
    r5: ledger[tid].forsale = true;
  }
  effect {
    match ledger[tid].bestbidder with
    | some b ->
      transfer ledger[tid].bestbid to ledger[tid].owner;
      ledger.update(tid, { owner = b; forsale = false })
    | none -> ()
    end
  }
}
